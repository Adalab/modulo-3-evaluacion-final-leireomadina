{"version":3,"sources":["service/api.js","images/neon-logo.png","components/Header.js","components/CharacterCard.js","images/morty-gif.gif","components/CharacterNotFound.js","components/CharacterList.js","components/CharacterDetail.js","components/Filters.js","components/App.js","index.js"],"names":["fetch","then","response","json","data","results","catch","error","console","log","Header","className","src","logo","alt","title","CharacterCard","props","to","id","image","name","species","CharacterNotFound","filterText","gif","CharacterList","characterItems","characters","map","character","length","notFound","CharacterDetail","status","checkStatus","origin","episode","type","Filters","onSubmit","event","preventDefault","htmlFor","placeholder","onChange","inputValue","target","value","handleFilter","App","useState","setCharacters","setFilterText","useEffect","api","exact","path","filteredCharacters","filter","toLowerCase","includes","sort","a","b","renderFilteredCharacters","component","routeCharacterId","parseInt","match","params","characterId","clickedCharacter","find","undefined","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.a5ebdf34.chunk.js","sourcesContent":["const ENDPOINT = \"https://rickandmortyapi.com/api/character/\";\r\n\r\nconst getDataFromApi = () => {\r\n  return fetch(ENDPOINT)\r\n    .then((response) => response.json())\r\n    .then((data) => {\r\n      // returns an array of 20 characters\r\n      return data.results;\r\n    })\r\n    .catch(error => console.log(\"Ha sucedido un error:\", error));\r\n};\r\n\r\n// Exporting as an object in case we add more functions in the future\r\nexport default {\r\n  getDataFromApi: getDataFromApi,\r\n};\r\n","export default __webpack_public_path__ + \"static/media/neon-logo.6eb4f643.png\";","import React from \"react\"\r\n// import logo from \"../images/Rick-and-Morty-logo.png\"\r\nimport logo from \"../images/neon-logo.png\"\r\nimport \"../stylesheets/layout/Header.scss\";\r\n\r\nconst Header = () => {\r\n  return (\r\n    <header className=\"main-header\">\r\n      <div className=\"main-header__container\">\r\n        <img src={logo} alt=\"Rick and Morty tv series logo\" title=\"Rick and Morty tv series logo\" className=\"main-header__image\"/>\r\n      </div>\r\n    </header>\r\n  )\r\n};\r\n\r\nexport default Header;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Link } from \"react-router-dom\";\r\nimport \"../stylesheets/layout/CharacterCard.scss\";\r\n\r\nconst CharacterCard = (props) => {\r\n  const checkSpecies = () => {\r\n    if (props.species === \"Human\") {\r\n      return \"ðŸŒŽ\";\r\n    } else {\r\n      return \"ðŸ‘½\";\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Link\r\n      to={`/character-detail/${props.id}`}\r\n      title={\"See this character's details\"}\r\n    >\r\n      <article className=\"card\">\r\n        <img\r\n          src={props.image}\r\n          alt={`${props.name}`}\r\n          title={`${props.name}`}\r\n          className=\"card__image\"\r\n        />\r\n        <h2 className=\"card__name\">{props.name}</h2>\r\n        <p className=\"card__species\">\r\n          {props.species}\r\n          <span className=\"card__species--icon\"> {checkSpecies()}</span>\r\n        </p>\r\n      </article>\r\n    </Link>\r\n  );\r\n};\r\n\r\nCharacterCard.propTypes = {\r\n  id: PropTypes.number,\r\n  name: PropTypes.string,\r\n  image: PropTypes.string,\r\n  species: PropTypes.string,\r\n};\r\n\r\nexport default CharacterCard;\r\n","export default __webpack_public_path__ + \"static/media/morty-gif.9e946522.gif\";","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport \"../stylesheets/layout/CharacterNotFound.scss\";\r\nimport gif from \"../images/morty-gif.gif\";\r\n\r\nconst CharacterNotFound = (props) => {\r\n  return (\r\n    <div className=\"not-found-container\">\r\n      <p className=\"not-found-container__text\">\r\n        There isn't any character that matches the word {props.filterText} !\r\n      </p>\r\n      <img\r\n        src={gif}\r\n        className=\"not-found-container__gif\"\r\n        alt=\"Surprised Morty gif\"\r\n        title=\"Surprised Morty gif\"\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nCharacterNotFound.propTypes = {\r\n  filterText: PropTypes.string,\r\n};\r\n\r\nexport default CharacterNotFound;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport CharacterCard from \"./CharacterCard\";\r\nimport CharacterNotFound from \"./CharacterNotFound\";\r\nimport \"../stylesheets/layout/CharacterList.scss\";\r\n\r\n\r\nconst CharacterList = (props) => {\r\n  //MAP\r\n  const characterItems = props.characters.map((character) => {\r\n    return (\r\n      <>\r\n      <li key={character.id} className=\"cards-container__item\">\r\n        <CharacterCard\r\n          id={character.id}\r\n          name={character.name}\r\n          image={character.image}\r\n          species={character.species}\r\n        />\r\n      </li>\r\n      </>\r\n    );\r\n  });\r\n\r\n  const notFound = () => {\r\n    // Renders the not found component if the list of characters is empty after during the user's search\r\n    if (characterItems.length === 0) {\r\n      return <CharacterNotFound filterText={props.filterText}/>\r\n    }\r\n  };\r\n \r\n  return (\r\n    <section className=\"cards-section\">\r\n      <ul className=\"cards-container\">{characterItems}</ul>\r\n      {notFound()}\r\n    </section>\r\n  );\r\n};\r\n\r\nCharacterList.propTypes = {\r\n  character: PropTypes.array,\r\n  id: PropTypes.number,\r\n  name: PropTypes.string,\r\n  image: PropTypes.string,\r\n  species: PropTypes.string,\r\n  filterText: PropTypes.string,\r\n};\r\n\r\nexport default CharacterList;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Link } from \"react-router-dom\";\r\nimport \"../stylesheets/layout/CharacterDetail.scss\";\r\n\r\nconst CharacterDetail = (props) => {\r\n  const checkStatus = () => {\r\n    if (props.status === \"Dead\") {\r\n      return \"ðŸ’€\";\r\n    }\r\n  };\r\n\r\n  return (\r\n    <main className=\"detail-page\">\r\n      <article className=\"detail-card\">\r\n        <div className=\"detail-card__image-container\">\r\n          <img\r\n            src={props.image}\r\n            alt={`${props.name}`}\r\n            title={`${props.name}`}\r\n            className=\"detail-card__image\"\r\n          />\r\n        </div>\r\n        <h2 className=\"detail-card__name\">{props.name}</h2>\r\n        <p className=\"detail-card__text\">\r\n          <strong>Status:</strong> {props.status}\r\n          <span className=\"detail-card__icon\"> {checkStatus()}</span>\r\n        </p>\r\n        <p className=\"detail-card__text\">\r\n          <strong>Species:</strong> {props.species}\r\n        </p>\r\n        <p className=\"detail-card__text\">\r\n          <strong>Origin:</strong> {props.origin}\r\n        </p>\r\n        <p className=\"detail-card__text\">\r\n          <strong>Episodes:</strong> {props.episode}\r\n        </p>\r\n        <Link to={\"/\"}>\r\n          <button type=\"button\" className=\"detail-card__button\">\r\n            Go back\r\n          </button>\r\n        </Link>\r\n      </article>\r\n    </main>\r\n  );\r\n};\r\n\r\nCharacterDetail.propTypes = {\r\n  image: PropTypes.string,\r\n  name: PropTypes.string,\r\n  status: PropTypes.string,\r\n  species: PropTypes.string,\r\n  origin: PropTypes.string,\r\n  episode: PropTypes.number,\r\n};\r\n\r\nexport default CharacterDetail;\r\n","import PropTypes from \"prop-types\";\r\nimport React from \"react\"\r\nimport \"../stylesheets/layout/Filters.scss\";\r\n\r\nconst Filters = (props) => {\r\n  //EVENTS\r\n  const handleFilter = (event) => {\r\n    const inputValue = event.target.value;\r\n    props.handleFilter(inputValue);\r\n  };\r\n\r\n  //Prevents the default submit event of the form\r\n  const handleSubmit = (event) => {\r\n    event.preventDefault();\r\n  };\r\n\r\n  return (\r\n    <section className=\"form-section\">\r\n      <form onSubmit={handleSubmit}>\r\n        <label htmlFor=\"character\"></label>\r\n        <input type=\"text\" id=\"character\" name=\"character\" placeholder=\"Search you favorite character\" onChange={handleFilter} value={props.filterText} className=\"form-section__input\"></input>\r\n      </form>\r\n    </section>\r\n  )\r\n};\r\n\r\nFilters.propTypes = {\r\n  handleFilter: PropTypes.func,\r\n  filterText: PropTypes.string\r\n};\r\n\r\nexport default Filters;\r\n","import React, { useEffect, useState } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Route, Switch } from \"react-router-dom\";\nimport api from \"../service/api\";\nimport Header from \"./Header\";\nimport CharacterList from \"./CharacterList\";\nimport CharacterDetail from \"./CharacterDetail\";\nimport \"../stylesheets/App.scss\";\nimport Filters from \"./Filters\";\n\nconst App = () => {\n\n  // STATE\n  const [characters, setCharacters] = useState([]);\n  //Defines a new state for the text written in the input\n  const [filterText, setFilterText] = useState(\"\");\n\n  //API\n  useEffect(\n    () => {\n      api.getDataFromApi().then((data) => {\n        setCharacters(data);\n      });\n    },\n    //Empty array so that the first useEffect parameter gets executed only once\n    []\n  );\n\n  //EVENT\n  const handleFilter = (inputValue) => {\n    setFilterText(inputValue);\n  };\n\n  //RENDER FILTER + SORT\n  const renderFilteredCharacters = () => {\n    const filteredCharacters = characters.filter((character) => {\n      const characterName = character.name;\n      return characterName.toLowerCase().includes(filterText.toLowerCase());\n    });\n    // sorts the filteredCharacters array's names alphabetically\n    const sortedcharactersNames = filteredCharacters.sort(function sortByName(a, b) {\n      if (a.name < b.name) {\n        //a will come before b\n        return -1;\n      } \n      if (a.name > b.name) {\n        //b will come before a\n        return 1;\n      }\n      // when a equals b:\n      return 0;\n    });\n    return filteredCharacters;\n  };\n\n  //RENDER DETAIL\n  const renderDetail = (props) => {\n    const routeCharacterId = parseInt(props.match.params.characterId);\n    const clickedCharacter = characters.find((character) => {\n      const characterId = character.id;\n      return routeCharacterId === characterId;\n    });\n    //renders the searched character if it finds it. Else, returns a not found message\n    if (clickedCharacter !== undefined) {\n      return (\n        <>\n        <Header />\n        <CharacterDetail\n          image={clickedCharacter.image}\n          name={clickedCharacter.name}\n          status={clickedCharacter.status}\n          species={clickedCharacter.species}\n          origin={clickedCharacter.origin.name}\n          episode={clickedCharacter.episode.length}\n        />\n        </>\n      );\n    } else {\n      return <p>The character you are looking for doesn't exist.</p>;\n    }\n  };\n\n  return (\n    <div className=\"App\">\n      <Switch>\n        <Route exact path=\"/\">\n          <Header />\n          <main className=\"main\">\n            <Filters handleFilter={handleFilter} filterText={filterText} />\n            <CharacterList characters={renderFilteredCharacters()} filterText={filterText}/>\n          </main>\n        </Route>\n        <Route path=\"/character-detail/:characterId\" component={renderDetail} />\n      </Switch>\n    </div>\n  );\n};\n\nApp.propTypes = {\n  characters: PropTypes.array,\n  handleFilter: PropTypes.func,\n  renderDetail: PropTypes.func,\n  filterText: PropTypes.string,\n  image: PropTypes.string,\n  name: PropTypes.string,\n  status: PropTypes.string,\n  species: PropTypes.string,\n  origin: PropTypes.string,\n  episode: PropTypes.number,\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { HashRouter } from 'react-router-dom';\nimport './stylesheets/index.scss';\nimport App from './components/App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <HashRouter>\n      <App />\n    </HashRouter>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}