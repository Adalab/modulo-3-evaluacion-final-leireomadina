{"version":3,"sources":["service/api.js","images/neon-logo.png","components/Header.js","components/CharacterCard.js","images/morty-gif.gif","components/CharacterNotFound.js","components/CharacterList.js","components/CharacterDetail.js","components/Filters.js","components/App.js","index.js"],"names":["getDataFromApi","a","fetch","resp","ok","json","data","results","Header","className","src","logo","alt","title","CharacterCard","props","to","id","image","name","species","CharacterNotFound","filterName","gif","CharacterList","characterItems","characters","map","character","length","notFound","CharacterDetail","status","checkStatus","origin","episode","type","Filters","handleFilters","event","target","value","checked","onSubmit","preventDefault","htmlFor","placeholder","onChange","filterGender","filterStatus","filterSortedNyName","App","useState","setCharacters","setfilterName","setFilterGender","setFilterStatus","setfilterSortedNyName","useEffect","api","then","catch","console","error","exact","path","filteredCharacters","filter","toLowerCase","includes","gender","sort","b","renderFilteredCharacters","component","routeCharacterId","parseInt","match","params","characterId","clickedCharacter","find","undefined","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.1236f008.chunk.js","sourcesContent":["const ENDPOINT = \"https://rickandmortyapi.com/api/character/\";\r\n\r\nconst getDataFromApi = async() => {\r\n  try {\r\n    const resp = await fetch(ENDPOINT);\r\n    if(!resp.ok) throw \"Im sorry, there has been a server error\";\r\n    const data = await resp.json();\r\n    return data.results;\r\n  } catch (err){\r\n    throw err;\r\n  }\r\n};\r\n\r\nexport default {\r\n  getDataFromApi: getDataFromApi,\r\n};\r\n","export default __webpack_public_path__ + \"static/media/neon-logo.6eb4f643.png\";","import React from \"react\"\r\n// import logo from \"../images/Rick-and-Morty-logo.png\"\r\nimport logo from \"../images/neon-logo.png\"\r\nimport \"../stylesheets/layout/Header.scss\";\r\n\r\nconst Header = () => {\r\n  return (\r\n    <header className=\"main-header\">\r\n      <div className=\"main-header__container\">\r\n        <img src={logo} alt=\"Rick and Morty tv series logo\" title=\"Rick and Morty tv series logo\" className=\"main-header__image\"/>\r\n      </div>\r\n    </header>\r\n  )\r\n};\r\n\r\nexport default Header;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Link } from \"react-router-dom\";\r\nimport \"../stylesheets/layout/CharacterCard.scss\";\r\n\r\nconst CharacterCard = (props) => {\r\n  const checkSpecies = () => {\r\n    if (props.species === \"Human\") {\r\n      return \"ðŸŒŽ\";\r\n    } else {\r\n      return \"ðŸ‘½\";\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Link\r\n      to={`/character-detail/${props.id}`}\r\n      title={\"See this character's details\"}\r\n    >\r\n      <article className=\"card\">\r\n        <img\r\n          src={props.image}\r\n          alt={`${props.name}`}\r\n          title={`${props.name}`}\r\n          className=\"card__image\"\r\n        />\r\n        <h2 className=\"card__name\">{props.name}</h2>\r\n        <p className=\"card__species\">\r\n          {props.species}\r\n          <span className=\"card__species--icon\"> {checkSpecies()}</span>\r\n        </p>\r\n      </article>\r\n    </Link>\r\n  );\r\n};\r\n\r\nCharacterCard.propTypes = {\r\n  id: PropTypes.number,\r\n  name: PropTypes.string,\r\n  image: PropTypes.string,\r\n  species: PropTypes.string,\r\n};\r\n\r\nexport default CharacterCard;\r\n","export default __webpack_public_path__ + \"static/media/morty-gif.9e946522.gif\";","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport \"../stylesheets/layout/CharacterNotFound.scss\";\r\nimport gif from \"../images/morty-gif.gif\";\r\n\r\nconst CharacterNotFound = (props) => {\r\n  return (\r\n    <div className=\"not-found-container\">\r\n      <p className=\"not-found-container__text\">\r\n        There isn't any character that matches the word {props.filterName} !\r\n      </p>\r\n      <img\r\n        src={gif}\r\n        className=\"not-found-container__gif\"\r\n        alt=\"Surprised Morty gif\"\r\n        title=\"Surprised Morty gif\"\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nCharacterNotFound.propTypes = {\r\n  filterName: PropTypes.string,\r\n};\r\n\r\nexport default CharacterNotFound;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport CharacterCard from \"./CharacterCard\";\r\nimport CharacterNotFound from \"./CharacterNotFound\";\r\nimport \"../stylesheets/layout/CharacterList.scss\";\r\n\r\n\r\nconst CharacterList = (props) => {\r\n  const characterItems = props.characters.map((character) => {\r\n    return (\r\n      <>\r\n      <li key={character.id} className=\"cards-container__item\">\r\n        <CharacterCard\r\n          id={character.id}\r\n          name={character.name}\r\n          image={character.image}\r\n          species={character.species}\r\n        />\r\n      </li>\r\n      </>\r\n    );\r\n  });\r\n\r\n  const notFound = () => {\r\n    // Renders the not found component if the list of characters is empty\r\n    if (characterItems.length === 0) {\r\n      return <CharacterNotFound filterName={props.filterName}/>\r\n    }\r\n  };\r\n \r\n  return (\r\n    <section className=\"cards-section\">\r\n      <ul className=\"cards-container\">{characterItems}</ul>\r\n      {notFound()}\r\n    </section>\r\n  );\r\n};\r\n\r\nCharacterList.propTypes = {\r\n  character: PropTypes.array,\r\n  id: PropTypes.number,\r\n  name: PropTypes.string,\r\n  image: PropTypes.string,\r\n  species: PropTypes.string,\r\n  filterName: PropTypes.string,\r\n};\r\n\r\nexport default CharacterList;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Link } from \"react-router-dom\";\r\nimport \"../stylesheets/layout/CharacterDetail.scss\";\r\n\r\nconst CharacterDetail = (props) => {\r\n  const checkStatus = () => {\r\n    if (props.status === \"Dead\") {\r\n      return \"ðŸ’€\";\r\n    }\r\n  };\r\n\r\n  return (\r\n    <main className=\"detail-page\">\r\n      <article className=\"detail-card\">\r\n        <div className=\"detail-card__image-container\">\r\n          <img\r\n            src={props.image}\r\n            alt={`${props.name}`}\r\n            title={`${props.name}`}\r\n            className=\"detail-card__image\"\r\n          />\r\n        </div>\r\n        <h2 className=\"detail-card__name\">{props.name}</h2>\r\n        <p className=\"detail-card__text\">\r\n          <strong>Status:</strong> {props.status}\r\n          <span className=\"detail-card__icon\"> {checkStatus()}</span>\r\n        </p>\r\n        <p className=\"detail-card__text\">\r\n          <strong>Species:</strong> {props.species}\r\n        </p>\r\n        <p className=\"detail-card__text\">\r\n          <strong>Origin:</strong> {props.origin}\r\n        </p>\r\n        <p className=\"detail-card__text\">\r\n          <strong>Episodes:</strong> {props.episode}\r\n        </p>\r\n        <Link to={\"/\"}>\r\n          <button type=\"button\" className=\"detail-card__button\">\r\n            Go back\r\n          </button>\r\n        </Link>\r\n      </article>\r\n    </main>\r\n  );\r\n};\r\n\r\nCharacterDetail.propTypes = {\r\n  image: PropTypes.string,\r\n  name: PropTypes.string,\r\n  status: PropTypes.string,\r\n  species: PropTypes.string,\r\n  origin: PropTypes.string,\r\n  episode: PropTypes.number,\r\n};\r\n\r\nexport default CharacterDetail;\r\n","import PropTypes from \"prop-types\";\r\nimport React from \"react\"\r\nimport \"../stylesheets/layout/Filters.scss\";\r\n\r\nconst Filters = (props) => {\r\n  //EVENTS\r\n\r\n  const handleFilters = (event) => {\r\n    const data = {\r\n      name: event.target.name,\r\n      value: event.target.value,\r\n      checked: event.target.checked\r\n    }\r\n    props.handleFilters(data);\r\n  };\r\n\r\n  // Prevents the default submit event of the form\r\n  const handleSubmit = (event) => {\r\n    event.preventDefault();\r\n  };\r\n  \r\n\r\n  return (\r\n    <section className=\"form-section\">\r\n      <form onSubmit={handleSubmit}>\r\n        {/* Character name */}\r\n        <fieldset className=\"form-section__container\">\r\n          <label htmlFor=\"character\" className=\"form-section__label\">Name</label>\r\n          <input type=\"text\" id=\"character\" name=\"character\" placeholder=\"Search you favorite character\" onChange={handleFilters} value={props.filterName} className=\"form-section__input\"></input>\r\n        </fieldset>\r\n        {/* Gender */}\r\n        <fieldset className=\"form-section__container\">\r\n          <label htmlFor=\"gender\" className=\"form-section__label\">Gender</label>\r\n          <select id=\"gender\" name=\"gender\" onChange={handleFilters} value={props.filterGender} className=\"form-section__select\">\r\n            <option value=\"all\" className=\"form-section__option\">All</option>\r\n            <option value=\"female\" className=\"form-section__option\">Female</option>\r\n            <option value=\"male\" className=\"form-section__option\">Male</option>\r\n            <option value=\"unknown\" className=\"form-section__option\">Unknown</option>\r\n          </select>\r\n        </fieldset>\r\n        {/* Status */}\r\n        <fieldset className=\"form-section__container\">\r\n          <label htmlFor=\"status\" className=\"form-section__label\">Status</label>\r\n          <select id=\"status\" name=\"status\" onChange={handleFilters} value={props.filterStatus} className=\"form-section__select\">\r\n            <option value=\"all\" className=\"form-section__option\">All</option>\r\n            <option value=\"alive\" className=\"form-section__option\">Alive</option>\r\n            <option value=\"dead\" className=\"form-section__option\">Dead</option>\r\n            <option value=\"unknown\" className=\"form-section__option\">Unknown</option>\r\n          </select>\r\n        </fieldset>\r\n        {/* Sort by name */}\r\n        <fieldset className=\"form-section__container\">\r\n        <input type=\"checkbox\" name=\"sorted\" id=\"sorted\" checked={props.filterSortedNyName} onChange={handleFilters} className=\"form-section__checkbox\"></input>\r\n        <span className=\"form-section__checkbox--customized\"></span>\r\n          <label htmlFor=\"sorted\" className=\"form-section__label\">Sort by name</label>\r\n        </fieldset>\r\n        {/* <button type=\"button\">Reset</button> */}\r\n      </form>\r\n    </section>\r\n  )\r\n};\r\n\r\nFilters.propTypes = {\r\n  handleChange: PropTypes.func,\r\n  filterName: PropTypes.string,\r\n  filterGender: PropTypes.string,\r\n  filterStatus: PropTypes.string,\r\n  filterSortedNyName: PropTypes.bool\r\n};\r\n\r\nexport default Filters;\r\n","import React, { useEffect, useState } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Route, Switch } from \"react-router-dom\";\nimport api from \"../service/api\";\nimport Header from \"./Header\";\nimport CharacterList from \"./CharacterList\";\nimport CharacterDetail from \"./CharacterDetail\";\nimport \"../stylesheets/App.scss\";\nimport Filters from \"./Filters\";\n\nconst App = () => {\n  // States\n  const [characters, setCharacters] = useState([]);\n  const [filterName, setfilterName] = useState(\"\");\n  const [filterGender, setFilterGender] = useState(\"all\");\n  const [filterStatus, setFilterStatus] = useState(\"all\");\n  const [filterSortedNyName, setfilterSortedNyName] = useState(false);\n\n  // API\n  useEffect(\n    () => {\n      api\n        .getDataFromApi()\n        .then((data) => {\n          setCharacters(data);\n        })\n        .catch(console.error);\n    },\n    //Empty array so that the first useEffect parameter gets executed only once\n    []\n  );\n\n  // Handlers\n  const handleFilters = (data) => {\n    if (data.name === \"character\") {\n      setfilterName(data.value);\n    }\n    if (data.name === \"gender\") {\n      setFilterGender(data.value);\n    }\n    if (data.name === \"status\") {\n      setFilterStatus(data.value);\n    }\n    if (data.name === \"sorted\") {\n      setfilterSortedNyName(data.checked);\n    }\n  };\n\n  // Filters\n  const renderFilteredCharacters = () => {\n    let filteredCharacters = characters\n      .filter((character) =>\n        character.name.toLowerCase().includes(filterName.toLowerCase())\n      )\n      .filter(\n        (character) =>\n          filterGender === \"all\" ||\n          character.gender.toLowerCase() === filterGender\n      )\n      .filter(\n        (character) =>\n          filterStatus === \"all\" ||\n          character.status.toLowerCase() === filterStatus\n      );\n\n    if (filterSortedNyName) {\n      // sorts the characters alphabetically\n      filteredCharacters.sort((a, b) => {\n        if (a.name < b.name) {\n          return -1;\n        }\n        if (a.name > b.name) {\n          return 1;\n        }\n        return 0;\n      });\n    }\n\n    return filteredCharacters;\n  };\n\n  // Render character detail page\n  const renderDetail = (props) => {\n    const routeCharacterId = parseInt(props.match.params.characterId);\n    const clickedCharacter = characters.find((character) => {\n      const characterId = character.id;\n      return routeCharacterId === characterId;\n    });\n\n    if (clickedCharacter !== undefined) {\n      return (\n        <>\n          <Header />\n          <CharacterDetail\n            image={clickedCharacter.image}\n            name={clickedCharacter.name}\n            status={clickedCharacter.status}\n            species={clickedCharacter.species}\n            origin={clickedCharacter.origin.name}\n            episode={clickedCharacter.episode.length}\n          />\n        </>\n      );\n    } else {\n      return <p>The character you are looking for doesn't exist.</p>;\n    }\n  };\n\n  return (\n    <div className=\"App\">\n      <Switch>\n        <Route exact path=\"/\">\n          <Header />\n          <main className=\"main\">\n            <Filters\n              handleFilters={handleFilters}\n              filterName={filterName}\n              filterGender={filterGender}\n              filterStatus={filterStatus}\n              filterSortedNyName={filterSortedNyName}\n            />\n            <CharacterList\n              characters={renderFilteredCharacters()}\n              filterName={filterName}\n            />\n          </main>\n        </Route>\n        <Route path=\"/character-detail/:characterId\" component={renderDetail} />\n      </Switch>\n    </div>\n  );\n};\n\nApp.propTypes = {\n  characters: PropTypes.array,\n  handleFilters: PropTypes.func,\n  renderDetail: PropTypes.func,\n  filterName: PropTypes.string,\n  filterGender: PropTypes.string,\n  filterStatus: PropTypes.string,\n  filterSortedNyName: PropTypes.bool,\n  image: PropTypes.string,\n  name: PropTypes.string,\n  status: PropTypes.string,\n  species: PropTypes.string,\n  origin: PropTypes.string,\n  episode: PropTypes.number,\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { HashRouter } from 'react-router-dom';\nimport './stylesheets/index.scss';\nimport App from './components/App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <HashRouter>\n      <App />\n    </HashRouter>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}